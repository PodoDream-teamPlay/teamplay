<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
		http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">
	
	<!-- Root Context: defines shared resources visible to all other web components -->
	
		<bean id="dataSource" 
	      name="dataSource"
	       class="oracle.jdbc.pool.OracleDataSource"> <!-- Default 값 -->
	       <!--property: 클래스의 멤버변수 : setter를 부름 -->
	       <property name="URL" value="jdbc:oracle:thin:@192.168.11.11:1521:xe" />
	       <property name="user" value="scott" />
	       <property name="password" value="tiger" />
	</bean>
	
	<bean id="sqlSessionFactory"
	       name="sqlSessionFactory"
	       class="org.mybatis.spring.SqlSessionFactoryBean" > <!-- 해당 클래스의 생성자를 부름 -->
	       <property name="dataSource" ref="dataSource" /> 
	                 <!--  멤버변수(name): 데이터 소스  값은 변경될 수 없음 ! 
	                                    Sql세션팩토리안에 setdataSource가 불러주는 변수로 정해져 있는 거임-->
	                 <!-- ref: 주소값(reference)->생성된 객체. ref와 오라클데이터소스의 name값과 동일해야 값을 찾음  --> 
           <property name="configLocation"
                     value="classpath:/mybatis-config.xml" />
           <property name="mapperLocations"
                    value="classpath:/mappers/*.xml" /> <!--  mappers 폴더를 만들었구 거기의 모든 xml파일에 대해 적용 -->
	</bean>
	
	<bean id="sqlSession" 
	      name="sqlSession" 
	      class="org.mybatis.spring.SqlSessionTemplate"
	      destroy-method="clearCache" >
	      <constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory" />
	      <!--constructor-arg: 매개변수를 갖는 생성자를 부름 (default값 말고)
	                                                          기본생성자가 없고 매개변수가 있는 생성자만 있을 경우 사용 -->	
	</bean>
	
	<!-- ★ Dao, Service 객체를 자바 빈으로 관리
	 namespace에서 context를 v체크 표시한 뒤 상단의 <bean에 설정이 되어 있으면 콤포넌트 할 수 있당  -->
	 
	<context:component-scan base-package="edu.spring.ex00">
	   <context:exclude-filter type="annotation"
	   expression="org.springframework.stereotype.Controller" />
	</context:component-scan>
	   <!--  Aspect도 Component 대상이 되는 거임  -->
	   <!--  namespace에서 aop체크박스 표시하기 !!  -->
	   
	
	<!-- ★  MyBatis가 사용하는 Mapper 객체를 자바 빈으로 설정하기
	   ReplyMapper 클래스의 package import문과 동일 -->
	<mybatis-spring:scan base-package="edu.spring.ex00.controller.mappers"/>
	
	<!-- AOP 기능을 어노테이션 기반으로 설정하기: 입력은 필요없이 설정만 딱 ! -->
	<aop:aspectj-autoproxy />

	<!-- ★☆★★☆ 트랜잭션 필수 설정 두 가지 -->
	<!-- 1. MyBatis의 DB 트랜잭션 관리를 하는 클래스를 bean으로 설정 -->
    <!-- 
    <bean id="transactionManager" 
	class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
	 <property name="dataSource" ref="dataSource" /> name: 멤버변수
	</bean> 
	-->
	
	<!-- 2.  트랜잭션 관리를  어노테이션 기반으로 하겠다고 설정-->
	<!--  namespace 에서 tx 체크박스 설정  -->
	<tx:annotation-driven/>
	
		
</beans>
